df=pd.read_csv("weatherHistory.csv")

df['Temperature (C)'] = df['Temperature (C)'].astype('float')
df['Apparent Temperature (C)'] = df['Apparent Temperature (C)'].astype('float')
df['Humidity'] = df['Humidity'].astype('float')
df['Wind Speed (km/h)'] = df['Wind Speed (km/h)'].astype('float')
df['Wind Bearing (degrees)'] = df['Wind Bearing (degrees)'].astype('int')
df['Visibility (km)'] = df['Visibility (km)'].astype('float')
df['Loud Cover'] = df['Loud Cover'].astype('int')
df['Pressure (millibars)'] = df['Pressure (millibars)'].astype('float')

df['Precip Type'].fillna( df['Precip Type'].value_counts().index[0], inplace=True)

df['Formatted Date'] = pd.to_datetime(df['Formatted Date'], utc=True)

Weather = df['Summary'].value_counts().reset_index()
Weather.columns=['Weather', 'Count']


def weather_humidity_plot():
    #plt.figure(figsize=(10, 6))
    #plt.xticks(rotation=90)
    #plt.title('Weather')
   
    #sns.barplot(x=df['Summary'], y=df['Humidity'], hue=df['Summary'], legend=False, palette=sns.color_palette("Set2"))
    #plt.tight_layout()
    
    
    
    # Save the graph as a static image file
    #filename = 'weather_humidity_plot.png'
    #filepath = os.path.join(app.config['UPLOAD_FOLDER'], filename)
    #plt.savefig(filepath)
    #plt.close()

    # Pass the image path to the HTML template for rendering
    return render_template('weather_humidity_plot.html', image_path=url_for('static', filename='uploads/' + filename))